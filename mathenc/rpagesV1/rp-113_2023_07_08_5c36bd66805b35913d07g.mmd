Различают п р о б л е м н о - о р и е н т и р о в а нн ы е А. я. (А. я. высокого уровня), предназначенные для записи алгоритмов безотносительно к к.-л. определенным вычислительным машинам, и м а ш н н оо р іл е н т и р о в а н ны е А. я. (А. я. низкого уровня), уже учитывающие особенности той или иной вычислительной машины (список команд, характеристики запоминающего устройства и т. д.). Обычно под термином «А. я." понимают проблемно-ориентированный язык, противопоставляя его м а ш н н о му я зык у, т. е. средству записи, воспринимаемой машиной непосредственно. Над законченными текстами (программами) в А. я. определен универсальный алгоритм их однозначного выполнения, что отличает А. я. от н е а лго р и т м и ч е с к х я $\mathbf{x}$ ы о в программирования, в к-рых процесс выполнения текста сугубо неоднозначен или текст служит только материалом для синтеза алгоритма решения задачи.

Подобно естественным языкам, А. я. строится над алфавитом основных символов (в к-ром записывается программа) в виде иерархич. системы своих грамматич. элементов с заданными на них отношениями (подобно словам, словосочетаниям и предложениям в естественном языке, связанным синтаксич. правилами). Элементы низшего уровня, образованные цепочками основных символов, наз. л е к с е м а м и. Для вхождений лексем в программу определена их принадлежность к некрому классу и к о бла с т и д е й с т в и я-к.-л. однозначно выделяемой части программы, к к-рой относятся все входящие в нее экземпляры лексемы. Среди всех вхожденшй лексемы выделяется одно, к-рое наз. о п р е д е л я ю щ и м; остальные вхождения лексемы в область действия наз. и с по л ь з у ю щ и м и.

Следующие уровни элементов А. я. образуются п он я т и я м и. Между понятиями А. я. задается отношение быть (прямой) к о н с т и т у е н т о й (т. е. непосредственной составной частью), а между конституентами данного понятия - отношение к о н к а т ен а ц и и (текстуального следования). Транзитивное замыкание конституентного отношения однозначно сопоставляет понятию нек-рое подслово текста программы, наз. п о р о ж е н и е м этого понятия. Существует одно начальное понятие, порождением к-рого является весь текст программы. Среди понятий выделяются позиц и и и с у б с т ит у енты. Субституента занимает нек-рую позицию, являясь ее прямой конституентой. Дерево, корень к-рого - начальное понятие, концевые вершины - лексемы и основные символы, внутренние вершины - понятия, а дуги конституентные отношения, наз. д е р е в о м p a зб о р а программы. Построение этого дерева наз. с и нт а к с и ч е с ки м а н а л и зом программы.

Понятия и лексемы обладают а т р и б у т а м и, т. е. нек-рыми фиксированными описанием А. я. множествами, элементы к-рых сопоставляются элементам А. я. в качестве их характеристик. Нахождение атрибутов әлементов А. я., входящих в программу, наз. ее с ем а н ти ч е с к и м а н а л зом. Нахождение атрибутов лексем начинается с анализа их определяющих вхождений, к-рые обычно содержат информацию об атрибутах в явном виде. Затем атрибутивная информация в пределах соответствующей области действия переносится на все использующие вхождения лексемы (и д е н т и фи к а ц и я). Атрибуты нек-рого понятия находятся индукцией по дереву разбора как функции атрибутов его конституент. Существенной частью семантич. анализа, имеющей большое значение для контроля правильности программы, является проверка на совместимость атрибутов позиции и ее субституенты (п р и в е д е н и е). Почти во всех А. я. действуют те или иные п р а в и л а ум о л ч а п п я, т. е. приписывание не специфицированному явно атрибуту нек-рого значения как функции контекста данного понятия. Таким контекстом могут быть: позиция, область действия, вся программа и, наконец, само описание А. я.

Правила синтаксич. анализа задаются либо порождающей грамматикой А. я. (см. Грамматика порождаюцая), либо анализирующим автоматом (точнее, его различными обобщениями), преобразующим текст программы в дерево разбора. Правила семантич. анализа описываются обычно неформально, однако предпринимались попытки формализовать определение атрибутивной информации и учет контекста с помощью механизма двухступенчатых грамматик (см. Алгол-68).

Алгоритм выполнения программ А. я. задается сопоставлением вершинам дерева разбора различных исполнительных процедур (называемых также т р а н с д у кторами, семанти ческими процед ур а м и). Каждая процедура выполняет нек-рые действия как функцию атрибутов и того или иного контекста данного понятия (или лексемы), а затем определяет последующую процедуру. Действия процедуры либо непосредственно задают вычислительный процесс в терминах нек-рой абстрактной машины (семантика и н т е р п р е т и р у ю щ е г о типа), либо трансформируют порождение данного понятия во фрагмент программы в нек-ром языке низшего уровня (семантика т р а н с ля ци о нн о го типа).

В конкретных А. я. алфавит основных символов обычно состоит из букв латинского (иногда с добавлением русского) алфавита, цифр, парных ограничителей (скобок), разделителей (знаков препинания) и нек-рых знаков операций. В связи с ограниченностью алфавита существуют правила кодирования основных символов комбинациями знаков, воспринимаемых входными устройствами машины. Основные классы лексем - нум е р а лы для изображения чисел, ли т е р а лы для изображения текстов, и д е н т иф и к а т о р ы для обозначения различных объектов программы, определяемых в ней самой. Основными объектами являются переменные величины, м е т к и (наименования различных частей программы) и п р о ц е д у р ы (функциональные обозначения). Смысл и назначение нек-рых идентификаторов фиксируется описанием А. я. (закрепленные слова).

Среди понятий А. я. выделяются базовые конструкции - описания, выражения и операторы. О п и с ан И я являются источником атрибутивной информации, приписываемой определяющему вхождению лексемы. В основном атрибуты характеризуют тип (вид) значений, вычисляемых при выполнении программы, их представление и режим хранения в памяти ЭВМ. Для составных значений (векторов, матриц, структурных величин) указывается также способ доступа к их элементарным компонентам. В ы р а ж е н и я являются источником значений; о п е р а т о р ы - единицами законченных действий в программе; б а з о в ы е о п ер а т о р - это оператор п р и с в а и в а н и я значения выражения переменной величине, оператор п ер е д а ч и у п р а в л е и я (безусловной или по условию), оператор в ы о в а п р ц е д у ры, оператор ц и к л а.

Циклы и процедуры являются наиболее характерными средствами А. я. для сокращенной записи сколь угодно длинных вычислений. Оператор цикла организует повторное выполнение нек-рой части программы (т ел а ц и к л а ), управляемое заданным условием на число повторенпй. Описание процедуры вводит сокращенное параметризованное функциональное обозначение для нек-рой части программы (т е л о п р о ц ед у р ы). Выполнение тела процедуры впоследствии может трактоваться как элементарное действие, инициируемое вызовом процедуры, вносящим одновременно в тело процедуры фактич. значения параметров.