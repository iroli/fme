в трудах С. К. Клини (S. С. Kleene), Э.Л. Поста (см. [6] - [8]), А. А. Маркова (см. [9] - [11]) и др. В частности, А. А. Марков предложил уточнять понятие алгоритма с помощью введенного им понятия нормального алгорифма (см. [10]). Наиболее общий подход к уточнению понятия алгоритма предложил А. Н. Колмогоров (см. [12], [13]).

Поскольку алгоритмы могут иметь дело лишь с так наз. конструктивны.ии объектами, то, чтобы перенести понятия и методы А. т. на случай неконструктивных объектов, надо эти последние объекты обозначить, или поименовать, конструктивными объектами. Изучение общих свойств таких поименований (прежде всего, когда в качестве обозначений, или имен, выступают натуральные числа) составляет предмет теории нумерации (см. [14]), образующей важный раздел А. т.

Основные понятия теории алгоритмов. $О$ б л а с т ь ю п ри м е им ости ал г о ри т м а наз. совокупность тех объектов, к к-рым он Применим. Про алгоритм $\mathfrak{A}$ говорят, что он: 1) «вычисляет функцию $f »$, коль скоро его область применимости совпадает с областью определения $f$, и $\mathfrak{A}$ перерабатывает всякий $x$ из своей области применимости в $t(x) ; 2)$ «разрешает множество $A$ относительно множества $X »$, коль скоро он применим ко всякому $x$ из $X$ и перерабатывает всякий $x$ из $X \cap A$ в слово «да», а всякий $x$ из $X \searrow A$ в слово «нет»; 3$)$ «перечисляет множество $B$ », коль скоро его область применимости есть натуральный ряд, а совокупность результатов есть $B$. Функция наз. в ы ч с ли м о й, если существует вычисляющий ее алгоритм. Множество наз. р а 3 р е ш и м ы м относительно $X$, если существует разрешающий его относительно $X$ алгоритм. Множество наз. П е р е ч и с л и ы м, если либо оно пусто, либо существует перечисляющий его алгоритм.

Детальный анализ понятия «алгоритм» обнаруживает, что: (I) область возможных исходных данных и область применимости любого алгоритма суть перечислимые множества. В свою очередь, (II) для любой пары вложенных одно в другое перечислимых множеств можно подобрать алгоритм, у к-рого большее множество служит областью возможных исходных данных, а меньшееобластью применимости. Имеют место следующие основные теоремы: (III) функция $f$ вычислима тогда и только тогда, когда перечислим ее график, т. е. множество всех пар вида $<x, f(x)>$. (IV) Подмножество $A$ перечислимого множества $X$ тогда и только тогда разрешимо относительно $X$, когда $A$ и $X>A$ перечислимы. (V) Если $A$ и $B$ перечислимы, то $A \cup B$ и $A \cap B$ также перечислимы. (VI) В каждом бесконечном перечислимом множестве $X$ существует перечислимое подмножество с неперечислимым дополнением [в силу (IV) это перечислимое подмножество будет неразрешимым относительно $X]$. (VII) Для каждого бесконечного перечислимого множества $X$ существует вычислимая функция, определенная на подмножестве этого множества и не продолжаемая до вычислимой функции, определенной на всем $X$. Утверждения (VI) и (II) в совокупности дают упоминаемый в статье Aлгоритм пример алгоритма с неразрешимой областью применимости. Разрешимые и перечислимые множества составляют простейшие (и наиболее важные) примеры множеств, строение к-рых задается с помощью тех или иных алгоритмич. процедур. Систематич. изучение множеств конструктивных объектов с точки зрения таких свойств этих множеств, к-рые связаны с наличием тех или иных алгоритмов, образует так наз. алгоритмическую теорию множеств; нек-рые понятия, методы и результаты этой теории находят глубокие аналогии в дескриптивной теории множеств.

Алгоритмические проблемы. Проблема построения алгоритма, обладающего теми или иными свойствами, наз. алгоритмической проблемой (а. П.). Как правило, свойство искомого алгоритма формулируется в терминах свойств того соответствия, к-рое должно иметь место между исходными данными и результатами алгоритма. Важные примеры a. п.: проблема вычисления данной функции (требуется построить алгоритм, вычисляюший эту функцию); проблема разрешения данного множества (требуется построить алгоритм, разрешающий это множество относительно нек-рого другого множества); проблема перечисления данного множества (требуется построить алгоритм, перечисляющий данное множество). Все примеры a. п. из различных областей математики, названные ниже в разделе «Приложения», являются проблемами разрешения. Неразрешимость а. п. означает отсутствие соответствующего алгоритма; теоремы, устанавливающие неразрешимость таких проблем, относятся к числу наиболее важных теорем А. т. Так, для алгоритма с неразрешимой областью применимости неразрешима а. п. разрешения әтой области относительно области возможных исходных данных. Посредством сведения к неразрешимости этой проблемы была установлена неразрешимость большинства других проблем разрешения (в частности, всех проблем, указанных ниже в разделе «Приложения»). Вопрос о том, для любой ли нераз решимой проблемы разрешения ее неразрешимость может быть установлена таким способом, составляет так наз. проблему алгоритмической сводимости.

Метрическая теория алгоритмов. А. т. можно разделить на дескриптивную (качественную) и метрическую (количественную). Первая - исследует алгоритмы с точки зрения устанавливаемого ими соответствия между исходными данными и результатами; к ней относятся, в частности, те алгоритмич. проблемы, о к-рых говорилось в предыдушем разделе. Вторая - исследует алгоритмы с точки зрения сложности как самих алгоритмов (см. Алгоритма сложность), так и задаваемых ими «вычислений», то есть процессов последовательного преобразования конструктивных объектов. Важно подчеркнуть, что как сложность алгоритмов, так и сложность вычислений могут определяться различными способами, причем может оказаться, что при одном способе $A$ будет сложнее $B$, а при другом спо. собе - наоборот. Чтобы говорить о сложности алгоритмов, надо сначала описать к.-л. точный язык для записи алгоритмов и затем под сложностью алгоритма понимать сложность его записп; сложность же записи можно определять различными способами (напр., как число символов данного типа, участвующих в записи, или как набор таких чисел, вычисленных для разных типов символов). Чтобы говорить о сложности вычисления, надо уточнить, как именно вычисление представляется в виде цепочки сменяющих друг друга конструктивных объектов и что считается сложностью такой цепочки (только ли число членов в ней - «число шагов» вычисления, или еще учитывается «размер» этих членов п т. п.); в любом случае сложность вычисления зависит от исходного данного, с к-рого начинается вычисление, поэтому сложность вычисления есть функция, сопоставляющая с каждым объектом из области применимости алгоритма сложность соответствующей цепочки. Разработка методов оценки сложности алгоритмов і вычислений имеет важное теоретич. и практич. значение, однако в отличие от дескриптивной А. т., оформившейся в целостную математич. дисциплину (см. [11], [15], [16]), метрич. А. т. находится в процессе становления (cм. [17]-[20]).

Приложения теории алгоритмов имеются во всех об. ластях математики, в к-рых встречаются алгоритмич. проблемы. Такие проблемы возникают в мателатической логике п моделей теории; для каждой теории формулируется проблема разрешения множества всех истинных или доказуемых предложений әтой теории относительно множества всех ее предложений (теории подраз-