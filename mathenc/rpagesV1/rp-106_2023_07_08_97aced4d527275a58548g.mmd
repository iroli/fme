![](https://cdn.mathpix.com/cropped/2023_07_08_97aced4d527275a58548g-1.jpg?height=23&width=824&top_left_y=197&top_left_x=124)
Первая теорема утверждает, что результат вычислений основных предикатов не зависит от алгоритма $A_{\pi}$ (порлдка обхода элементов множества $\left.\mathfrak{D}^{*}\right)$. Вторая теорема утверждает существование в весьма общих предположениях н а и л у ч ш е г о А. л., т. е. А. л., к-рый по затанной фиксированной системе окрестностей вычисляет заданные основные предикаты при фиксированных вспомогательных предикатах всегда, когда это делает любой другой А. л. с той же системой окрестностей, основных и вспомогательных предикатов.

Задача получения наилучшего А. л. в явной форме решена для алгоритмов синтеза минималыных покрытий. Пусть задан набор $\left\langle\mathfrak{U}_{1}, \ldots, \mathfrak{A}_{q}, \mu_{1}, \ldots, \mu_{q}, M\right\rangle$, где $\mathfrak{U}_{i}-$ множество, $\mu_{i}-$ сложность $\mathfrak{U}_{i}, \quad \mu_{i}>0, \quad i=1$, $2, \ldots, q, M \subseteq \bigcup_{i=1}^{q} \mathfrak{A}_{i}$. Сложность набора $\left(\mathfrak{Z}_{i_{1}}, \ldots, \mathfrak{A}_{i_{p}}\right)$ есть $\sum_{j=1}^{p} \mu_{i j}$. Требуется построить покрытие $M$ множествами из числа $\mathfrak{U}_{1}, \ldots, \mathfrak{Q}_{q}$ с минимальной сложностью. Система окрестностей $S_{1}, \ldots, S_{n}, \ldots$ для каждого $\mathfrak{U}_{i}$ вводится аналогично системе окрестностей для конъюнкций. Наилучший А. л. строится для системы окрестностей $S_{k}$ при фиксированных предикатах: множество вспомогательных предикатов пусто; в качестве основных рассматриваются предикаты $P_{1}(\mathfrak{A}, M)$ («) не входит ни в одно минимальное покрытие $M$ ) и $P_{2}(\mathfrak{A}, M)$ («\{) входит во все минимальные покрытия М»). Наилучшие А. л. построены также для вычисления простых свойств ребер графа. Большое число разлитных А. л. было предложено для решения задач милимизации булевых функций, дискретного линейного программирования и т. Д.

Важное место в теории А. л. занимают задачи о невычислимости экстремальных свойств в классе А. л. Если на парах $(\mathfrak{M}, \mathfrak{D}), \mathfrak{M} \in \mathfrak{D}\}, \mathfrak{M} \in M$, задана система вложенных окрестностей: $S_{1}(\mathfrak{A}, \quad \mathfrak{W} \mathfrak{Z}) \subseteq S_{2}(\mathfrak{A}, \quad \mathfrak{N}) \subseteq$ $\ldots \sqsubseteq S_{n}(\mathfrak{A}, \mathfrak{D} Z) \sqsubseteq \ldots$ и А. л. работает по системе окрестностей $S(\mathfrak{A}, \mathfrak{M})$, где $S_{k-1}(\mathfrak{X}, \quad \mathfrak{D}) \sqsubseteq S(\mathfrak{A}, \quad \mathfrak{D}) \sqsubseteq$ $\subseteq S_{k}(\mathfrak{A}, \sqrt{N})$, то говорят, что А. л. имеет и н д е к с $k$. Число предикатов $P_{1}, \ldots, P_{l}$ в определении А. л. естественно считать в е ли ч и н о й п а м я т и А. Л. Пусть задано множество $\mathscr{\mathcal { P }}$ предикатов $\boldsymbol{P}(\mathfrak{Q}, \mathfrak{M})$. Считается, что все предикаты, участвующие в определении А. л., принадлежат (P. Пусть $A\left(\prod^{*}\right)$ - результат примене-

![](https://cdn.mathpix.com/cropped/2023_07_08_97aced4d527275a58548g-1.jpg?height=37&width=828&top_left_y=1510&top_left_x=122)
кат $P_{1}(\mathfrak{A}, \mathfrak{D})$ говорят, что он не является $(k, l)$-в ыч и с л и М м, если для всякого А. л. индекса $k$ с величиной памяти $l$, основным предикатом $P_{1}$ и вспо-

![](https://cdn.mathpix.com/cropped/2023_07_08_97aced4d527275a58548g-1.jpg?height=37&width=828&top_left_y=1629&top_left_x=122)
$\mathfrak{M}^{*}$ такое, что в $A\left(\mathfrak{D}^{*}\right)$ предикат $P_{1}$ будет вычислен не для всех элементов.

Пусть $f\left(x_{1}, \ldots, x_{n}\right)-$ совокупность всех булевых бункций от переменных $x_{1}, \ldots, x_{n}$ и $P_{1}\left(\mathfrak{A}, f\left(x_{1}, \ldots, x_{n}\right)\right)$ -

![](https://cdn.mathpix.com/cropped/2023_07_08_97aced4d527275a58548g-1.jpg?height=35&width=826&top_left_y=1786&top_left_x=123)
минимальную дизьюнктивную нормальную форму». При естественных ограничениях на класс предика-

![](https://cdn.mathpix.com/cropped/2023_07_08_97aced4d527275a58548g-1.jpg?height=40&width=828&top_left_y=1878&top_left_x=122)
не является $(k, l)$-вычислимым, если $k l<$ const $\cdot 2^{n}$. Интересно отметить, что предикат $\boldsymbol{P}\left(\mathfrak{A}, f\left(x_{1}, \ldots, x_{n}\right)\right)$ «конъюнкция $\mathfrak{A}$ входит хотя бы в одну тупиковую дизъюнктивную нормальную форму $f »$ (см. Булевьх бункчий нормальные бормы $)$ является $(2,1)$-вычислимым, но не (1, 1)-вычислимым. Аналогичные результаты получены для предикатов, описываюих вхождение ребра в минимальный путь между заданными вершинами графофа.

Jum.: [1] Ж у р а в л е в Ю. И., "Кибернетика", 1965, № 1, с. $12-19 ; 1966, \mathcal{N}_{2} 2$, с. $1-11 ;[2]$ Х у т о р я н с к а н Ю. И., сб. «Проблемы кибернетики", 1962 , вып. 8, с. 5-44.

См. также лит. при статье Булевых бункций минимизачия.

Ю. И. Нуравлев. АЛГГРИТМА ИЗОБРАЯКЕНИЕ - конструктивный объект определенного вида (как правило, натуральное число или слово), содержащий в себе закодированную по фиксированным для алгоритмов данного типа правилам полную информацию об этом алгоритме. Обычно определение А. и. формулируется таким образом, чтобы прощедуры получения А. и. по исходному алгоритму и восстановления исходного алгоритма по А. и. осуществлялись по возможности более просто

Изоб р а ж е ни е $\mathfrak{U}$ норлального алгорибла $\mathfrak{\mathcal { H }}$ в алфавите $A$ (не содержащем букв $\alpha, \beta$ и $\boldsymbol{\alpha}$ ) определяется как слово в алфавите $A \alpha \beta \gamma$, получаемое следующим образом (см. [1], с. 163). В каждой формуле подстановки схемы $\mathfrak{U}$ стрелка заменяется буквой $\alpha$, точка (если она имеется) - буквой $\beta$, а.в конце так построенного слова приписывается буква $\mathcal{1}$. Затем полученные слова выписываются друг за другом в том порядке, в каком соответствующие им формулы подстановки шли

![](https://cdn.mathpix.com/cropped/2023_07_08_97aced4d527275a58548g-1.jpg?height=35&width=824&top_left_y=719&top_left_x=987)
лишь несколько иначе - в виде слова - записанную схему нормального алгорифма $\mathfrak{\{}$. По соображениям, связанным с технич. деталями определения нормального алгорифма, несколько более удобным оказывается другой тип изображения нормального алгорифма так называемая 3 а п и с ь нормального алгорифма (см. [1], с. 187), являющаяся результатом перевода слова $\mathfrak{A}$ в к.-Ј. двухбуквенный алфавит (обычно 01). Аналогичным образом может быть построено изображение программы тьюринаа машинь. Роль изображения рекурсивной функции играет гёделев номер системы определяющих эту функіцю равенств (см. $[2]$, c. 221).

При к.-л. уточнении общего понятия алгоритма А. и. определяется с таким расчетом, чтобы оно (фактическиизображаемый им алгоритм) могло входить в состав исходных данных для алгоритмов такого типа. При этом открывается возможность доказывать так наз. «теоремы об универсальных алгоритмах", трактующие об осуществимости алгоритмов, способных моделировать по А. и. работу любого алгоритма рассматриваемого типа.

Если для к.-л. алгоритма А. и. является допустимым исходным данным, то этот алгоритм наз. с а м о п р им е н и м м, если он применим к своему А. и., и н ес а м о п и м е имым - в противном случае. Рассуждением, представляющим собой вариант «парадокса Рассела" (см. Антиномия) применительно к данной ситуации, можно показать, что естественно возникающая при этом алгоритмич. проблема распознавания самоприменимых алгоритмов среди прочих алгорітмов того же типа оказывается неразрешимой. Этот результат лежит в основе многих теорем о неразрешимости алгоритмич. проблем.

Дліна А. и. является одной из естественных мер алгоритма сложности (объем памяти, требующейся для запоминания программы алгоритма).

Лum.: [1] М а р к о в А. А., Теория алгорифмов, М., 1954 («Tр. матем. ин-та АН СССР», т. 42); [2] К ли н и С. К., Вве дение в метаматематику, пер. с англ., М., 1957. м. нагорный.

АЛГОРИТМА СЛОभННОСТЬ в Ы ч І с л е н й й функщия, дающая числовую оценку трудностіг (громоздкости) процессов применения алгоритма к исходным данным. Уточнением А. с. вычислений служит понятие си г н л и зи р у ю $е$ й ф ун к и и (или просто с и г на ли и и р у ю ш е й) - функции, к-рая задается разрешимым отношением между объектамі применения алгоритма и натуральными числами и имеет область определения, совпадающую с областью применимости алгоритма.

Чаще всего рассматриваются временны́е и пространственные характеристики алгоритмич. процессов. 'Так, для Тьюринга машины $M$ с и г на ли зи р у ю щ а я