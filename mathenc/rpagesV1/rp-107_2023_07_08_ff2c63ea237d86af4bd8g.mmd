ф у нк ци я в р е м е ни (время работы) $T_{M}(P)$ есть число $t$ тактов работы $M$ при преобразовании исходных слоз $P$ в заключительные; с и г н а л и з и р у ю щ а я п а м я т и (или е мк о с т и) $S_{M}(P)$ определяется как количество ячеек ленты, в к-рых хотя бы раз побывала головка машины при работе над $P$. Сходным образом определяются сигнализирующие времени и емкости для норлальных алгорифмов, итеративных сетей, многоголовочных и многоленточных машин Тьюринга и т. п.

Общей особенностью этих двух конкретных типов сигнализирующих является наличие эффективной процедуры, позволяющей для любого алгоритма $\alpha$ (т. е., в частности, для машины Тыоринга, или, точнее, для еe программы), всякого исходного данного $x$ и натурального числа $t$ установить, верно ли, что процесс применения $\alpha$ к $x$ заканчивается со сложностью $t$. Это обстоятельство положено в основу аксиоматич. построения теории сложности вычислений (см. [1]). Эфффективная процедура $r$ наз. м е р о й в ы ч и с л ен и й, если она: 1) всегда заканчивается результатом 0 или 1 применительно к тройкам вида 〈алгоритм, исходное данное, натуральное число $>$, 2) обладает тем свойством, что для любого алгоритма $\alpha$ и исходного данного $x$ равенство $r(\alpha, x, t)=1$ верно не более чем при одном натуральном $t$, причем такое $t$ существует тогда и только тогда, когда процесс применения $\alpha$ к $x$ заканчивается. Вводится с и гнали и и р ую ща я функция $R_{\alpha}$ п о м е р е $r$ для $\alpha: R_{\alpha}(x)=t$ тогда и только тогда, когда $r(\alpha, x, t)=1$

Таким образом, последнее равенство объявляется эквивалентом высказывания «сложность вычисления $\alpha$ на $x$ равна $t$ (по мере $r$ )».

Флксируя ту или иную меру вычислений, можно ставить задачи о сложности вычисления конкретных функций $f$, напр. об отыскании алгоритма $\alpha$, вычиєляющего $f$ «лучше других алгоритмов». Однако, как показывает теорема ускорения (см. ниже), подобная поотановка не всегда правомерна, и речь может идти скорее об описании скорости роета тех сигнализирующих $R_{\alpha}$, для к-рых $\alpha$ вычисляет $f$ [напр., об отыскании верхней и нижней границ сложности вычисления $f$ - двух функций $G(x)$ и $g(x)$ таких, что существует вычисление $\alpha$ функции $f$, для к-рого $R_{\alpha}(x) \leqslant G(x)$, и для всякого алгоритма $\beta$, вычисляющего $f$, функция $R_{\beta}$ в каком-то смысле мажорирует $g$ ].

Другим важным направлением в теории сложности вычислений является изучение к л а с с о в с ло жн о с т и - множеств функций, для к-рых существуют вычисления со сложностью, не превышающей к.-л. границы из множества границ, задающих класс. К этому направлению можно отнести и задачи сравнения сложности вычисления для различных типов алгоритмов (автоматов): переход к иной алгоритмич. системе и мере сложности обычно равносилен рассмотрению подходящей новой меры для исходной концепции алгоритмов.

Укажем нек-рые фундаментальные результаты, не зависящие от выбора меры сложности (в том числе и от выбора конкретного уточнения понятия алгоритма) лишь бы существовала, напр., эффективная возможность взаимного моделирования алгоритмов рассматриваемого типа и обыкновенных машин Тьюринга. (Для простоты можно представить себе дело так, что речь идет о времени вычисления на машинах Тьюринга натуральнозначных функций натурального аргумента.) Пусть $T$ и $h$ суть вычислимые натуральнозначные функции (см. Вычислимая функция) на объектах применения алгоритмов, $f$ - функция, определенная на тех же объектах и принимающая лишь два значения (например, 0 II 1).

Во-первых, существуют сколь угодно сложно вычислимые функции. Точнее, для любой функции $T$ су- ществует вычислимая функция $f$ такая, что для всякого алгоритма $\alpha$, вычисляющего $f$, неравенство

\[
R_{\alpha}(x)>T(x)
\]

неверно лишь в ограниченном числе случаев.

Во-вторых, существуют функции, любое вычисление к-рых в принципе может быть улучшено как угодно сильно. Точнее, имеет место т е о р е м а у с к о р ен и я: для любой функции $h$ (напр., $h(t)=2^{t}$ ) можно указать вычислимую функцию $f$ такую, что для всякого алгоритма $\alpha$, вычисляющего $f$, не может не найтись (здесь эффективная процедура не предполагается) алгоритм $\beta$, тоже вычисляющий $f$ и такой, что для всех $x$ (кроме конечного множества)

\[
h\left(R_{\beta}(x)\right)<R_{\alpha}(x)
\]

в случае $h(t)=2^{t}$ это приводит к

\[
R_{\beta}(x)<\log _{2} R_{\alpha}(x)
\]

для почти всех $x$.

Для мер вычислений, определяющих время работы и объем памяти, заключение теоремы ускорения верно для большинства вычислений в такой форме: если $f$ вычислима со сложностью $R(n)$, то она вычислима и со сложностью $R(n) / 2$ (говорят, что $f$ вычислима со сложностью $R(n)$, если для нек-рого $\alpha$, вычисляющего еe, $R_{\alpha}(P) \leqslant R(n)$ для всех слов $P$ длины $n$ в рассматриваемом алфавите). Поэтому временна́я и объемная сложности вычислений конкретных функций часто оцениваются с точностью до порядка. Ниже приведены нек-рые конкретные результаты.

Установлено, что время распознавания равенства слов равно (по порядку) $n^{2}$ для машин Тьюринга и нормальных алгорифмов; что всякое свойство слов, распознаваемое на машинах Тьюринга за время, по порядку меньшее функции $n \log _{2} n$, распознается и за время $n$; что вычисления на машинах Тьюринга со временем $T(n)$ (для $T(n) \geqslant n^{2}$ по порядку) моделируются на машинах Тьюринга с объемом памяти $\sqrt{T(n)}$. Доказано, что умножение двух $n$-разрядных чисел на многоленточных машинах Тьюринга осуществимо за время $n^{1+\varepsilon}$, но всегда более $n$ по порядку, а итеративные сети могут умножать в р е а л ь н о е в р е м я, т. е. $i$-й младший разряд произведения появляется на выходе с подачей на вход $i$-х разрядов сомножителей. При моделировании алгоритмич. процессов одного типа с помощью других сложность вычислений, вообще говоря, меняется. Так, уменышение размерности итеративных сетей приводит к увеличению времени. В то же время замена многоголовочных машин Тьюринга многоленточными не меняет времени вычисления функций. Для многих типов алгоритмов доказывается возможность их моделирования на машинах Тьюринга с полиномиальным (обычно даже квадратичным) возрастанием времени работы и незначительным увеличением объема памяти.

Сложностный подход оказывается полезным при изученип известных иерархий классов общерекурсивн ых бункций, связанных с логическими и алгебраическими их особенностями. Так, напр., примитивно рекурсивщые функции оказываются в точности теми функциями, к-рые вычислимы на машинах Тьюринга с объемом памяти, ограниченным определенной функцией. Факты существования достаточно сложно распознаваемых свойств, не зависящие от выбора вычислений, доказываются применением диагонального процесса. Их естественные аналоги были обнаружены для нек-рых разрешимых әлементарных теорий и в областях, примыкающих к математич. лингвистике. В то же время для многих практически важных проблем получение хороших нижних гранищ сопряжено со значительными трудностями. Так, в частности, обстоит дело с задачами