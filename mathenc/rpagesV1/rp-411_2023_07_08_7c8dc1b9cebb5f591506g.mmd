идеи неоднозначна и приводит к разным вариантам математич. понятия алгоритма. Основными математич. моделями понятия алгоритма являются машины Тьюринга, частично рекурсивные функции, нормальные алгоритмы Маркова и др.

Машины тьюринга. Алгоритмы, применяемые в математике, напоминают машину, работающую отдельными тактами и выдающую ответ через конечное число тактов. А. Тьюринг и Ә. Пост описали понятия вычислительных машин абстрактных, на к-рых можно моделировать вычислительные процессы. М а ш и н а Т ь ю р и н г а (иногда говорят машина Тьюринга Поста) $M$ состоит из:

к о н е ч но го ал ф а ви т а $\alpha=\left\{a_{0}, a_{1}, \ldots, a_{n}\right\}$, где $a_{i}$ произвольные символы; конечные упорядоченные последовательности символов алфовавиа $\alpha$ наз. словами в алфавите $\alpha$; с помощью слов в алфавите $\alpha$ кодируются псходные данные задачи, промежуточные вычисления и получаемые ответы;

ко н е чного сп и ск а $Q=\left\{q_{0}, q_{1}, \ldots, q_{m}\right\}$ ә ле мен т а р ных с о с т о яний, в к-рых машина $M$ может находиться; при этом $q_{1}$ считается начальным состоянием, в к-ром находится $M$, когда начинает работу, а $q_{0}-$ конечным состоянием: если $M$ приходит в состояние $q_{0}$, то она останавливает свою работу;

п р о г р а м м ы, составленной из отдельных команд $T_{i j}$, имеющих один из видов: $a_{i} q_{j \rightarrow} \rightarrow a_{k} D q_{l}$, где $0 \leqslant i, k \leqslant n, \quad 0<j \leqslant m, 0 \leqslant l \leqslant m, \quad D-$ один из символов движения Л, П или С.

Конфигурация машины $M$ в данный момент времени кодируется словом вида $A a_{i} q_{j} B$, где $A$ и $B$ - нек-рые слова в алфавпте $\alpha$ (вместо пустого слова $A$ пишут $a_{0}$ ). Конфигурация машины $M$ в следующий момент времени (после выполнения одного такта работы) также кодируется словом, к-рое зависит от команды $T_{i j}$ : если $D=J$, то получается слово $A q_{l} a_{k} B$, если $D=\mathrm{C}$, то получается слово $A a_{k} q_{l} B$ если $D=\Pi$ и $B=a_{p} B^{\prime}$, то получается слово $A a_{k} a_{p} q_{l} B^{\prime}$, если $D=\Pi$ и $B$ - пустое слово, то получается слово $A a_{k} a_{0} q_{l} B$.

Работа машины $M$ может быть описана следующим образом: кодируют исходные данные с помощью нек-рой начальной конфигурации (здесь $q_{j}=q_{1}$ ); согласно программе машины $M$ получают следующую конфигурацию и т. д., если в какой-либо момент получают конфигурацию, содержащую конечное состояние $q_{0}$, то прекращают работу; заключительная конфигурация декодируется в ответ; если машина никогда не останавливается, то считают ответ в задаче неопределенным.

Всякая вычислительная процедура, к-рая может быть сведена к работе подходящей машины Тьюринга, является эффективной в интуитивном смысле. Обращение предыдущего высказывания получило название т ез и с а Т ь ю р и н г а: всякая әффективная вычислительная процедура может быть реализована на соответствующей машине $M$. Этот тезис нельзя доказать, так как он объединяет два понятия - строгое математич. понятие машины Тьюринга и расплывчатое, интуитивное понятие эффективной процедуры. Если моделировать на машинах Тьюринга вычисление значений функции, области определения п значений к-рой суть множества натуральных чисел, то приходят к понятию в ы ч і с л и м о й (на машинах Тьюринга) ф у н к ц и и. См. также Тьюринга машина.

Частично рекурсивные функции. Все известные прігмеры алгоритмов можно свести к вопросу вычисления значений подходящей функции. Считая эту черту алгоритмов основной, А. Чёрч, К. Гёдель и С. Клини выделили широкий класс функций, названных частично рекурсивными. Пусть $F$ - класс частичных функций, об- ласти определения и значения к-рых суть множества натуральных чисел. На множестве $F$ определяют следующие операции:

с у пе р по зиция ф у нкци й: если $f, \alpha_{1}, \ldots$ $\ldots, \alpha_{m} \in F$, то говорят, что функция

$\varphi\left(x_{1}, \ldots, x_{n}\right)=f\left(\alpha_{1}\left(x_{1}, \ldots, x_{n}\right), \ldots, \alpha_{n}\left(x_{1}, \ldots, x_{n}\right)\right)$ получается из $f, \alpha_{1}, \ldots, \alpha_{n}$ с помощью суперпозиции;

$\mu-о$ п е р а т о р: пусть $f_{1}, f_{2} \in F$; говорят, что функция $\psi$ получается из $f_{1}$ и $f_{2}$ с помощью $\mu$-оператора, и записывают

$\psi\left(x_{1}, \ldots, x_{n}\right)=\mu y\left[f_{1}\left(x_{1}, \ldots, x_{n}, y\right)=f_{2}\left(x_{1}, \ldots, x_{n}, y\right)\right]$, если $f_{1}\left(x_{1}, \ldots, x_{n}, z\right)$ и $f_{2}\left(x_{1}, \ldots, x_{n}, z\right)$ определены и неравны между собой при $z<y$, а

$f_{1}\left(x_{1}, \ldots, x_{n}, y\right)=f_{2}\left(x_{1}, \ldots, x_{n}, y\right)$ и $\psi\left(x_{1}, \ldots, x_{n}\right)=y$.

Ясно, что если эти операции применяются к функциям, значение к-рых мы умеем вычислять, то имеются алгоритмы, вычисляющие значения функций $\varphi$ и $\psi$. Следующие функции считаются простейшими:,$+ \times$, $I_{i}^{n}\left(x_{1}, \ldots, x_{n}\right)=x_{i}$ п

\[
k(x, y)=\left\{\begin{array}{l}
0, \text { если } x<y, \\
1, \text { если } x \geqslant y .
\end{array}\right.
\]

Имеются легкие алгоритмы, вычисляющие значения простейших функций.

Функция $f$ наз. ч а с т и ч н о $\mathrm{p}$ е к у $\mathrm{p}$ с и в н о й, если она за конечное число шагов может быть получена из простейших с помощью суперпозиции и $\mu$-оператора. Всюду определенная частично рекурсивная функция наз. о б щ е $\mathrm{p}$ е к у $\mathrm{p}$ с и в н о й. Значение всякой частично рекурсивной функции может быть вычислено эффективно в интуитивном смысле. Обращение этого высказывания получило название те з и с а Ч ё р ч а: всякая функция, значение к-рой может вычисляться эффективно, является частично рекурсивной. Таким образом, согласно тезису Чёрча, в ы ч и сли мы ми фу нкция я и являются частично рекурсивные функции

Нормалыные алгорифмы Маркова. Всякий конкретный алгоритм имеет дело с нек-рым алфавитом, и решение конкретной задачи сводится к переработке слов данного алфавита по нек-рым заранее заданным правилам. Такой подход к теории алгоритмов развит А. А. Марковым, предложившим концепцию нормального алгорифма в качестве математич. модели понятия вычислительной процедуры.

Нормальный алгорифм $\varphi$ состоит из нек-рого алфавита $\alpha=\left\{a_{0}, a_{1}, \ldots, a_{n}\right\}$ и конечного упорядоченного списка правил вида $A \rightarrow B$, где $A$ и $B$ - нек-рые слова в алфавите $\alpha$. Часть правил выделена и названа заключительными. Правило $A \rightarrow B$ применяется к слову $P$ следующим образом: слово $P$ представляется в виде $Q A R$, где $Q$ и $R$ - слова в алфавите $\alpha$, возможно пустые, и из всех таких представлений выбирается то, в к-ром слово $Q$ имеет наименьшую длину; тогда результатом применения данного правила к слову $\boldsymbol{P}$ наз. слово $Q B R$. Нормальный алгорифм $\varphi$ применяется к слову $\boldsymbol{P}$ следующим образом: применяют к слову $\boldsymbol{P}$ первое правило из тех, к-рые к $P$ можно применить, получают слово $P_{1}$; применяют к $P_{1}$ первое правило из тех, к-рые к $P_{1}$ можно применить, получают слово $P_{2}$ и т. Д. В результате получается последовательность слов, к-рая обрывается после применения какого-либо заключительного правила.

Кодируя соответствующим образом информацию, можно использовать нормальные алгорифмы для решения разнообразных алгоритмич. задач. Всякая вычислительная процедура, промоделированная с помощью нормального алгорифма, является әффективной в интуитивном смысле. Обращение этого высказывания носит