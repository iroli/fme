преобразование. При этом должен быть предварительно определен класс элементов, из к-рых должна строиться искомая система.

Важное значение имеет задача нахождения формальных преобразований кибернетич. систем, не меняющих задаваемых ими преобразований (а, возможно, и нек-рые другие инварианты). Тем самым вводятся различные определения эквивалентности систем, делающие возможными постановку з а д а ч о п т и м и з а ц и и систем, т. е. задач нахождения в классе эквивалентных систем системы с экстремальными значениями определяемых на системах функционалов.

3 а д а ч а д е к о м п о и ц и и системы означает представление части системы или всех ее элементов в виде систем, состоящих из более мелких элементов (подсистем). Для большого числа применений важное значение имеют системы, представляемые в виде комбинации двух подсистем (элементов), наз. обычно у пра в ляющ е й с и с т е мой и о б ъ е к том у пр а в л е н и я. Для наглядности подобную систему можно представить в виде графа (см.

![](https://cdn.mathpix.com/cropped/2023_07_08_f73de30eade2acbb8525g-1.jpg?height=193&width=223&top_left_y=794&top_left_x=119)
рис.), где через $A$ обозначена управляющая система, через $B$ - объект управления; буквой $x$ обозначен так наз. к а н а л п р я м о й с в я зи (выход элемента $A$, отождествленный с входом элемента $B$ ), через $y-$ к а н а л о б р а т н о й с в я з и, через $a-$ входной сигнал системы (воздействие окружающей среды, различного рода помехи) и через $b$ - выходной сигнал, характеривующий качество функционирования подсистемы $B$ (качество управления).

Для подобных систем задача синтеза ставится обычно следующим образом: при заданной системе $B$, заданном классе внешних воздействий $a$ и заданном критерии качества управления $b$ построить управляющую систему $A$, обеспечивающую заданное поведение критерия качества $b$. Под такое определение попадают задачи синтеза систем программного управления $(b-$ заданная векторная функция времени), следящие системы (минимизирующие в том или ином смысле вектор $b-a)$, системы оптимального управления (системы, выводящие объект управления в желательную область значений его состояния за кратчайшее время) и т. п.

Важное место в теории кибернетич. систем занимают задачи обеспечения надежности их функционірования. Причем, кибернетич. аспект надежности связан не с обеспечением физич. надежности элементов и связей между ними, а с вопросами организации самой системы (избыточность элементов и связей, специальные системы кодирования и т. п.).

Для достаточно простых систем большинство из перечисленных задач (если не в полных, то хотя бы в упрощенных постановках) могут быть репены средствами классич. математики, дополненными тривиальным перебором вариантов. Для сложных систем, с к-рыми приходится обычно иметь дело на практике, эти методы оказываются, как правило, непригодными. При этом сложность систем в $К$. понимается не только и не столько в простом количественном смысле (число элементов системы, число связей, размерность векторов состояний, входов и выходов), а прежде всего - в принципиальном качественном смысле. С л о ж н о й в этом смысле наз. система, не имеющая простых описаний. А это предполагает наряду с большими количествами используемых элементов и параметров большое их разнообразие (не сводящееся к простым закономерностям), а также большое разнообразие и нерегулярность связей между элементами. Эффективное исследование таких систем классическими дедуктивными методами оказывается практически невозможным. Классический экспериментальный метод исследования также оказывается применимым лишь в весьма ограниченных пределах. Во многих случаях его применение ограничивается высокой стоимостью әксперимента, а в ряде случаев (метеорология, экология, макроэкономика и др.) натурные эксперименты становятся либо вовсе невозможными, либо по крайней мере чересчур ріскованными.

Поэтому в качестве основного метода исследования сложных систем $\kappa$. использует метод машинного эксперимента, превратившийся в новый мощный универсальный метод научного познания в результате появления быстродействующих универсальных ЭВМ. Метод машинного эксперимента в чистом виде основан на использовании так наз. и м и т а ц и о н ны $\mathbf{м}$ мд е л е й. Такие модели по существу являются простым переложением на машинный язык описаний моделируемых систем. Специальные программы, обслуживающие модель, генерируют различные конкретные реализации входного сигнала $x(t)$ моделируемой системы и строят в соответствии с введенным в ЭВМ описанием системы (включая ее начальное состояние) выходной сигнал $y(t)$. Далее, как и в обычном (натурном) эксперименте, полученные результаты обрабатываются с по мощью специальных программ, строящих, напр., гистограммы распределений тех или иных величин, характеризующих поведение исследуемой системы, определяющих различные качественные характеристики (принадлежность системы и определяемого ею преобразования информации к тому или иному классу), и т. п. Таким способом решаются прежде всего задачи анализа кибернетич. систем. Для решения задач синтеза и оптимизации методом машинного эксперимента обслуживающая оксперимент система машинных программ дополняется средствами, обеспечивающими диалог ЭВМ с человеком-исследователем, внесение изменений в описание моделируемой системы по подсказке человека, а также процедуры направленного перебора для организации подобных изменений в автоматич. режиме.

Перевод описаний кибернетич. систем на машинный язык представляет собой достаточно трудоемкую процедуру. Поэтому в современные средства машинного эксперимента включаются специальные программы трансляторы (или интерпретаторы), автоматизирующие перевод на машинный язык описаний систем на специально разрабатываемых для этой цели языках системного моделирования. Основу таких языков составляют средства (удобные для исследователя) фактич. описания параметров, функций и связей, входящих в описание систем. Сохраняя, как правило, универсальность (т. е. возможность описания произвольных систем), языки моделирования обычно ориентированы на более простое и легкое описание систем тех или иных специальных классов. Кроме того, в языки системного моделирования включаются дополнительные средства для описания прөцедур, обслуживающих машинный эксперимент, к-рые были описаны выше. В настоящее время (1978) разработаны многие десятки универсальных и специализированных языков системного моделирования и основанных на них систем машинного әксперимента: цностранные языки-симула, симскрипт, отечественные - слэнг, недис и др.

Во многих системах машинного эксперимента имитационное моделирование дополняется возможностями использования аналитич. аппарата тех или иных разделов математики (напр., теории массового обслуживания), а также современных вычислительных методов. В первую очередь это касается различного рода оптимизационных методов: линейное программирование, динамич. программирование, градиентные методы, стохастич. программирование и др.

В ряде случаев для изучения кибернетич. систем оказывается целесообразным дополнять машинный экс-