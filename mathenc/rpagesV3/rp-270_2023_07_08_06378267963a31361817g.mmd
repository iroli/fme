и равенства имеют место в том и только в том случае, когда $\alpha(\omega)$ - простой $r$-(ко)вектор;

в) $|\alpha \vee \beta|_{0} \leqslant|\alpha|_{0}|\beta|_{0},|\omega \vee \zeta|_{0} \leqslant B|\omega|_{0}|\zeta|_{0}$

для внешних произведений $\mathrm{V}$, причем для простого поликовектора $\omega$ (или $\xi$ ) $B=1$, а в общем случае $B=C_{r}^{r+s}$, если $\omega \in V^{[r]}, \xi \in V^{[s]}$;

г) $|\omega \wedge \alpha|_{0} \leqslant \tilde{B}|\omega|_{0}|\alpha|_{0}$ для внутренних произведений $\wedge$, причем $\tilde{B}=1$ при $r \geqslant s$ и $\widetilde{B}=C_{s}^{r}$ при $r \leqslant s, \omega \in V^{[r]}, \alpha \in V_{[s]}$.

Эти определения позволяют определить М. и к. для сечений соответствующи $\mathrm{x}$ расслоений, стандартными слоями к-рых являются $V^{[r]}$ и $V_{[r]}$. Напр., к о м а сс а фо р м ы $\omega$ в области $G \subset E^{n}$ равна

\[
|\omega|_{0}=\sup \left\{|\omega(p)|_{0}, p \in G\right\}
\]

2) М а с полиәд п а льнй це ли $A=$ $=\sum a_{i} \sigma_{i}^{r}$ равна

\[
|A|=\sum\left|a_{i}\right|\left|\sigma_{i}^{r}\right|
\]

где $\left|\sigma_{i}^{r}\right|$ - объем клетки $\sigma_{i}^{r}$. Для произвольной цепи массу (конечную или бесконечную) можно определить несколькими способами, к-рые для бемольной цепи (см. Бемольная норма) и диезной цепи (см. Диезная норма) дают одно и то же значение массы.

3) К о м а с а (бемольной, в частности диезной) к о ц е п $X$ определяется стандартным образом:

\[
|X|=\sup _{A \neq 0} \frac{|X \cdot A|}{|A|},
\]

где $A$ - полиэдральная цепь, $X \cdot A$ - значение коцепи $X$ на цепи $A$.

Лит. см. при ст. Бемольнал норма. М. К. Войцеховский.

МАССИВНОЕ МНОЖЕСТВО - множество $M$ топологич. пространства $X$, являющееся пересечением счетного числа открытых плотных в $X$ подмножеств. Если каждое М. м. Плотно в $X$, то $X$ оказывается Бәра пространством.

М. К. Войцеховский.

МАССОВАЯ ПРОБЛЕМА, а л г о р и т м и ч е с к а я п р о б л е м а,- проблема нахождения алгоритма для решения бесконечной серии однотипных задач, зависящих от нек-рого параметра. Простейшие примеры М. п.: сложить два данных десятичных числа, умножить два данных числа, проверить, является данное целое число простым или нет, найти производную данной функции, разложить данную функцию в степенной ряд и т. Д. Если искомый алгоритм не существует, то говорят, что рассматриваемая М. П. неразрешима.

Проблему нахождения алгоритма, решающего данную М. п., иногда называют п р обл е м о й р а зр е ши м о с ти. Этот несколько неудачный термин исторически впервые появился в связи с проблемой распознавания выводимости формул в классическом исчислении предикатов. Вообще же говоря, под проблемой разрешимости данной М. П. естественно считать вопрос о том, разрешима или нет эта М. П., т. е. существует или нет искомый алгоритм.

См. также Алгоритмическая проблема. С. И. Адлн.

МАССОВОГО ОБСЛУ ЖИВАНИЯ СИСТЕМА - понЯтие, к-рое включает в себя случайный «входящий» поток требований (вызовов, клиентов), нуждающихся в «обслуживании», и механизм (алгоритм), осуществляющий это «обслуживание».

Типичным примером М. о. с. являются автоматич. телефонные станции, на к-рые случайным образом поступают требования - вызовы абонентов (входящий поток вызовов), а механизм обслуживания состоит из фиксированного числа $n$ каналов (линий) связт, каждый из к-рых остается занятым под обслуживание очередного вызова случайное время, равное длительности разговора. Если все $n$ каналов заняты, то вызов получает «отказ". Механизм (алгоритм) обслуживания может включать в себя также указания, на какую из свободных линий следует направлять очередной вызов, предложение ждать, если требуемый абонент занят, и пр.

Существуют и системы другого типа, когда каждое требование непременно должно быть обслужено, как это имеет место, напр., в потоке самолетов, прибывающих в аәропорт для посадки, или в потоке задач (программ), к-рые должны быть реализованы на электронно-вычислительной машине.

«Случайную" часть М. о. с. удобно описывать с помощью случайных последовательностей илі процессов. Наиболее простые М. о. с. Можно описывать двумерными управляющими случайными последовательностями

\[
\left\{\tau_{j}^{e}, \tau_{j}^{s} ; 0 \leqslant j<\infty\right\}
\]

неотрицательных случайных величин. Последовательность $\left\{\tau_{j}^{e}\right\}$ определяет поток вызовов $e$ : она указывает случайные моменты времени

\[
\tau_{0}^{e}, \tau_{0}^{e}+\tau_{1}^{e}, \tau_{0}^{e}+\tau_{1}^{e}+\tau_{2}^{e}, \ldots,
\]

в к-рые в систему поступают требования, подлежащие обслуживанию. Эквивалентным образом входной поток можно характеризовать случайным процессом $\{e(t)$; $t \geqslant 0\}$; значение $e(t)$ указывает число вызовов, поступивших в систему к моменту времени $t$. Вторая последовательность $\left\{\tau_{j}^{S}\right\}$ описывает процесс обслуживания $s$ : случайная величина $\tau_{j}^{s}$ означает время, к-рое тратится на обслуживание вызова с номером $j$. Обслуженные вызовы выбывают из рассмотрения.

Весьма распространено описание управляющпх последовательностей с помощью маркированных точечных процессов, в к-рых $\tau_{j}^{e}$ представляют собой интервалы между точками, а $\tau_{j}^{s}-$ марки этих точек.

Задание управляющей последовательности не определяет однозначно поведение системы. Необходимо задать еще алгоритм обслуживания - правило, которое определяет моменты начала обслуживания и поведение вызовов в зависимости от состояния системы.

Многообразие алгоритмов обслуживания порождает чрезвычайно много различных видов систем обслуживания. Ниже приведена классификация простейших из них.

I. Сист е м ы с ожи да ни е м (илис и с те мы с о ч е р е д ю ю). Вызовы, поступившие в систему и не принятые немедленно к обслуживанию, накапливаются, образуя «очереды", ожидающую обслуживания. В дальнейшем вызовы обслуживаются в порядке поступления. С и с т е м а 3 а н я т а в момент времени $t$, если в этот момент есть очередь или происходит обслуживание очередного вызова. В противном случае система наз. с в о бо д н о й в момент времени $t$. Различают два типа систем с очередью.

I. О б ч н ы е с и с т е мы. Если система свободна, то она начинает действовать (обслуживать очередной вызов) немедленно при поступлении вызова. Если система занята, то обслуживание очередного вызова начинается после окончания обслуживания предыдущего. Такие системы наз. также п о л н о д ос т у п н ы ми.

I. С истемыс а в т о о мным об блу жив а н и е м. Здесь обслуживание начинается только в моменты времени $0, \tau_{1}^{s}, \tau_{1}^{s}+\tau_{2}^{s}, \ldots$