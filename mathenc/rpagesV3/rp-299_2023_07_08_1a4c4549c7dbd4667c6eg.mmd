(ф о р м у л а Т е й л о р а); при этом ошибка приближения

\[
R_{n}(x)=f(x)-P_{n}(x)
\]

стремится к нулю при $x \rightarrow x_{0}$ быстрее, чем $\left(x-x_{0}\right)^{n}$ :

\[
R_{n}(x)=o\left(\left(x-x_{0}\right)^{n}\right) \quad \text { при } \quad x \longrightarrow x_{0} .
\]

Таким образом, функция $f(x)$ в окрестности точки $x_{0}$ может быть приближена с любой степенью точности весьма простой функцией (многочленом), требующей для своего вычисления только арифметич. операций сложения, вычитания и умножения.

Особенно важными являются так наз. аналитические в определенной окрестности $x_{0}$ функции, имеющие бесконечное число производных, такие, что для них в этої окрестности $R_{n}(x) \rightarrow 0$ при $n \rightarrow \infty ;$ они могут быть представлены в виде бесконечного степенного р я д а Т е й л о р a:

$f(x)=f\left(x_{0}\right)+\frac{f^{\prime}\left(x_{0}\right)}{1 !}\left(x-x_{0}\right)+\ldots+\frac{f^{(n)}\left(x_{0}\right)}{n !}\left(x-x_{0}\right)^{n}+\ldots$

Разложения Тейлора при определенных условиях возможны и для функций многих переменных, а также функционалов и операторов.

Историческая справка. До 17 в. М. а. предсгавлял собой совокупность решений разрозненных частных задач; напр., в интегральном исчислении - это задачи на вычисление площадей фигур, объемов тел с кривыми границами, работы переменной силы и т. д. Каждая задача или частная группа задач решалась своим методом, подчас сложным и громоздким (о предыстории М. а. см. статью Бесконечно малых исчисление). М. а. как единое и систематич. целое сложился в трудах И. Ньютона (I. Newton), Г. Лейбница (G. Leibniz), Л. Эйлера (L. Euler), Ж. Лагранжа (J. Lagrange) и др. ученых 17-18 вв., а его база - теория пределов была разработана О. Когши (А. Cauchy) в нач. 19 в. Глубокий анализ исходных понятий М. а. был связан с развитием в 19-20 вв. теории множеств, теории меры, теории функций действительного переменного и привел к разнообразным обобщениям.

Лum.: [1] Ла В а л л е - П у с с е н Ш.-ж. д е, Курс анализа бесконечно малых, пер. с франц., т. 1-2, М., 1933; [2] И л ь и н В. А., П о з н я к Э. Г., Основы математического анализа, 3 изд., ч. 1, М., 1971; 2 изд., ч. 2, М., 1980; [3] И л ьи н В. А., С а д о вн и ч и й В. А., С е н д о в Б. Х., Математический анализ, М., 1979; [4] К у д р я в ц е в Јі. Д., Математический анализ, 2 изд., т. 1-2, М., 1973; [5] Н и к о лі ьтический анализ, изд., т.
с к и й С. М., Курс математического анализа, 2 изд., т. $1-2$,
м. М., $1975 ;$ [6] У и т т е к е p Э. Т., В а т с о н Д Ж. Н., Курс
современного анализа, пер. с англ., ч. $1-2,2$ изд., М., $1962-63 ;$ современного анализа, пер. с англ., ч. $1-2,2$ изд., М., $1962-63$;
$[7]$ и х т е н г о л ь ц Г. М., Курс дифференциального и интегрального исчисления, 7 изд., т. $1-2$, М., 1970 ; 5 изд., т. 3 , M. 1970 . C. М. Никольский.

МАТЕМАТИЧЕСКОЕ ОБЕСПЕЧЕНИЕ Э В М, п р о г а ммное обе с печ е ни е,- совокупность программ и программных комплексов, посредством г-рых происходит преобразование алгоритмов программы пользователя, записанных на алгоритмич. языках высокого уровня, в последовательность команд, понимаемых электроникой ӘВМ, организуется автоматич. прохождение задач пользователей на ЭВМ, обеспечивается эффективное использование оборудования ЭBM (cM. [1] - [4]).

Появление М. о. было вызвано необходимостью повышения производительности труда программистов и специалистов, эксплуатирующих ЭВМ. Действительно, команды вычислительной машины представляют собой с точки зрения возможности записи алгоритма весьма элементарные операции, и запись алгоритма (программирование) в виде последовательности этих команд является трудоемкой работой. Это стимулировало создание средств автоматизации програмяироваиия. Происходило укрупнение операциї, понимаемых әлектроникої машины, но это не решило проблемы. Даже у сов- ременных ЭВМ команды, как правило, представляют собой элементарные операции. Существенно больший успех был достигнут на пути создания программных средств, облегчающих программирование. Первым шагом было создание М. о., позволяющего программировать на автокоде. Программа на автокоде фактически представляет собой ту же последовательность команд ЭВМ, но записанных симв олическими обозначениями в мнемоническом виде. Преобразование мнемонич. кода программы в команды машины осуществляют специальные программы - а с с е м 6 л е р ы. Затем появились м а к р о а с с е м б л е р ы, к-рые дали возможность использовать в текстах программ макрооператоры, обеспечивающие выполнение группы команд машины.

Следующим этапом автоматизации программирования было создание алгоритмических лзыков высокого уровня. Имеется свыше тысячи алгоритмич. языков различного назначения, применение к-рых существенно сокращает затраты на разработку и создание программ. Первым, получившим широкое распространение, стал язык gортран. Затем появились языки алгол, алгалc, а в СССР и язык альба, предназначенные в основном для проведения научно-технич. расчетов. Для записи алгоритмов обработки экономич. информации был создан язык кобол. Алголоподобный язык паскаль имеет средства для описания структуры данных. Для работы с текстовой информацией предназначены языки лисn, снобол, амбит, сдл и др. Для описания алгоритмов проведения аналитич. преобразований на ЭВМ получила широкое распространение система Reduce, a в CCCP и язык аналитик (см. [5]). Как развитие и обобщение языков фортран, алгол и кобол появились языки ПЛ/1 и $а л г о л-68$.

Параллельно с развитием языковых средств велись работы по созданию библиотек стандартных программ. Имеются тысячи подпрограмм, программ и программных комплексов, в к-рых реализованы алгоритмы общего и специального назначения с использованием мето дов вычислительной математики. Среди них: вычисление әлементарных и специальных функций, линейная алгебра, счет интегралов, численное решение обыкно венных дифференциальных уравнений и уравнений с частными производными, метод наименьших квадратов и др. Стандартные программы организованы в виде библиотек подпрограмм, записанных на магнитные ленты или диски, так что они легко доступны. Для вызова подпрограммы достаточно поставить в программе оператор обращения к ней. Наиболее часто применяемые подпрограммы хранятся в виде стандартных модулей загрузки на языке, весьма близком к кодам ЭВМ. Как правило, трансляторы с алгоритмич. языков выдают результат своей работы в виде последовательности отдельных подпрограмм и процедур, к-рые сразу же после трансляции записываются во временную библиотеку в виде стандартных модулей загрузки. Последующеө объединение отдельных подпрограмм в рабочую программу в кодах ЭВМ с соответствующей настройкой осуществляет загрузчик либо перед началом счета (статич. загрузчик), либо во время счета в момент вызова конкретной подпрограммы (динамич. загрузчик). В нек-рых системах объединение отдельных оттранслированных ранее частей программ в единую программу осуществляет т. н. редактор связей, а загрузчик только располагает готовую программу в памяти машины.

Наряду с пополнением библиотеки стандартных подпрограмм все большее распространение получает практика созцания пакетов прикладных программ, рассчитанных на решение не отдельной задачи, а целого класса задач. Пакет программ представляет собой совокупность подпрограмм, работающих под управлением головной программы. Режим работы пакета задается посредством специализированного проблемно-ориенти-